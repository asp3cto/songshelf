// Code generated by sqlc. DO NOT EDIT.
// versions:
//   sqlc v1.27.0
// source: verses.sql

package sqlc

import (
	"context"
)

const getVerses = `-- name: GetVerses :many
SELECT
    verse_number,
    text
FROM
    verses
WHERE
    song_id = $1
ORDER BY
    verse_number
LIMIT $2 OFFSET $3
`

type GetVersesParams struct {
	SongID int   `json:"song_id"`
	Limit  int32 `json:"limit"`
	Offset int32 `json:"offset"`
}

type GetVersesRow struct {
	VerseNumber int    `json:"verse_number"`
	Text        string `json:"text"`
}

func (q *Queries) GetVerses(ctx context.Context, arg GetVersesParams) ([]GetVersesRow, error) {
	rows, err := q.db.Query(ctx, getVerses, arg.SongID, arg.Limit, arg.Offset)
	if err != nil {
		return nil, err
	}
	defer rows.Close()
	var items []GetVersesRow
	for rows.Next() {
		var i GetVersesRow
		if err := rows.Scan(&i.VerseNumber, &i.Text); err != nil {
			return nil, err
		}
		items = append(items, i)
	}
	if err := rows.Err(); err != nil {
		return nil, err
	}
	return items, nil
}
